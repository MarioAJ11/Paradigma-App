-- Define la estructura de la tabla para los episodios en la base de datos local.
CREATE TABLE EpisodioEntity (
    id INTEGER NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    content TEXT,
    archiveUrl TEXT,
    imageUrl TEXT,
    date TEXT NOT NULL,
    duration TEXT NOT NULL,
    programaId INTEGER NOT NULL
);

-- Inserta un nuevo episodio o reemplaza uno existente si el ID ya existe.
insertEpisodio:
INSERT OR REPLACE INTO EpisodioEntity(id, title, content, archiveUrl, imageUrl, date, duration, programaId)
VALUES(?, ?, ?, ?, ?, ?, ?, ?);

-- Selecciona todos los episodios guardados en la base de datos.
selectAllEpisodios:
SELECT *
FROM EpisodioEntity;

-- Selecciona todos los episodios que pertenecen a un programa específico.
selectEpisodiosByProgramaId:
SELECT *
FROM EpisodioEntity
WHERE programaId = ?;

-- Elimina todos los episodios asociados a un ID de programa.
-- Útil para refrescar la caché de un programa concreto.
deleteEpisodiosByProgramaId:
DELETE FROM EpisodioEntity
WHERE programaId = ?;

-- Busca episodios cuyo título o contenido contengan el término de búsqueda.
-- La sintaxis 'LIKE '%' || :searchTerm || '%'' busca cualquier coincidencia parcial.
-- Esta es la consulta que hará que nuestra búsqueda en caché sea súper rápida y eficiente.
buscarPorTitulo:
SELECT *
FROM EpisodioEntity
WHERE title LIKE '%' || :searchTerm || '%' OR content LIKE '%' || :searchTerm || '%';